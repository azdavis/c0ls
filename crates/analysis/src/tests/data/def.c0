  struct S { int a; };
//^^^^^^^^^^^^^^^^^^^^ struct-def: S

  typedef struct S* S;
//^^^^^^^^^^^^^^^^^^^^ type-def-def: S

  S mk() {
//^ type-def-use: S
  return alloc(struct S);
//                    ^ struct-use: S
}

  int foo() { int ret = 123; return ret; }
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ fn-def: foo

int main() {
  int ret = 123;
//^^^^^^^^^^^^^^ var-def: ret
  S guy = mk();
//^^^^^^^^^^^^^ var-def: guy
  if (guy != NULL) {
//    ^^^ var-use: guy
    int got = foo();
//            ^^^^^ fn-use: foo
    int a = got;
//  ^^^^^^^^^^^^ var-def: a
    ret += got
//  ^^^ var-use: ret
      + a
//      ^ var-use: a
      + guy->a;
//      ^^^ var-use: guy
  }
  return ret;
//       ^^^ var-use: ret
}
