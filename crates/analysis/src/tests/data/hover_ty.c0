struct s {
  int x;
//^^^ hover: int
  bool y;
//^^^^ hover: bool
  struct s* next;
};

typedef struct s* fella;

  fella
//^^^^^ hover: struct s*
mk(int x) {
  //      ^ hover: <none>
  struct s* ret = alloc(struct s);
  //              ^^^^^^^^^^^^^^^ hover: struct s*
  ret->x = x;
  //       ^ hover: int
  ret->y = false;
  //       ^^^^^ hover: bool
  return ret;
}

int consume(struct s* guy) {
  fella nil =
//^^^^^ hover: struct s*
    NULL;
  //^^^^ hover: <any>*
  if (guy == nil) {
  //         ^^^ hover: struct s*
    return 123;
  //       ^^^ hover: int
  }
  if (guy == NULL) {
  //         ^^^^ hover: <any>*
    return 234;
  //       ^^^ hover: int
  }
  int ret =
//^^^ hover: int
    guy->x;
  //^^^ hover: struct s*
  if (guy->y) {
    ret += 1;
  //       ^ hover: int
  }
  guy = mk(3);
  //    ^^^^^ hover: struct s* mk(int x)
  ret += consume(guy->next);
  //     ^^^^^^^^^^^^^^^^^^ hover: int consume(struct s* guy)
  return ret;
  //     ^^^ hover: int
}
